#!/usr/bin/env python3

import rospy
from sensor_msgs.msg import Imu
from std_msgs.msg import Header
from mpu6050 import mpu6050  # Import the library for MPU6050

def publish_imu_data():
    rospy.init_node('imu_publisher', anonymous=True)
    imu_pub = rospy.Publisher('/imu/data_raw', Imu, queue_size=10)
    rate = rospy.Rate(100)  # Adjust the publishing rate as needed
    imu_sensor = mpu6050(0x68)  # Initialize MPU6050 sensor with its I2C address

    while not rospy.is_shutdown():
        # Read IMU data from the sensor
        accel_data = imu_sensor.get_accel_data()
        gyro_data = imu_sensor.get_gyro_data()

        # Create a new Imu message
        imu_msg = Imu()
        imu_msg.header = Header()
        imu_msg.header.stamp = rospy.Time.now()

        # Populate IMU message with accelerometer data
        imu_msg.linear_acceleration.x = accel_data['x']  # Replace 'x' with appropriate axis
        imu_msg.linear_acceleration.y = accel_data['y']  # Replace 'y' with appropriate axis
        imu_msg.linear_acceleration.z = accel_data['z']  # Replace 'z' with appropriate axis

        # Populate IMU message with gyroscope data
        imu_msg.angular_velocity.x = gyro_data['x']  # Replace 'x' with appropriate axis
        imu_msg.angular_velocity.y = gyro_data['y']  # Replace 'y' with appropriate axis
        imu_msg.angular_velocity.z = gyro_data['z']  # Replace 'z' with appropriate axis

        # Publish IMU message
        imu_pub.publish(imu_msg)
        rate.sleep()

if __name__ == '__main__':
    try:
        publish_imu_data()
    except rospy.ROSInterruptException:
        pass
